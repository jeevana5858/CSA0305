#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};
struct Node* last = NULL;
void insertBegin(int val) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = val;
    if (last == NULL) {
        last = newNode;
        newNode->next = newNode;
    } else {
        newNode->next = last->next;
        last->next = newNode;
    }
}
void insertEnd(int val) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = val;
    if (last == NULL) {
        last = newNode;
        newNode->next = newNode;
    } else {
        newNode->next = last->next;
        last->next = newNode;
        last = newNode;
    }
}
void deleteBegin() {
    if (last == NULL) {
        printf("List is Empty\n");
        return;
    }
    struct Node* temp = last->next;
    if (last == temp) {
        last = NULL;
    } else {
        last->next = temp->next;
    }
    printf("Deleted: %d\n", temp->data);
    free(temp);
}
void deleteEnd() {
    if (last == NULL) {
        printf("List is Empty\n");
        return;
    }
    struct Node* temp = last->next;
    if (last == temp) {
        printf("Deleted: %d\n", temp->data);
        free(temp);
        last = NULL;
    } else {
        while (temp->next != last)
            temp = temp->next;
        temp->next = last->next;
        printf("Deleted: %d\n", last->data);
        free(last);
        last = temp;
    }
}
void display() {
    if (last == NULL) {
        printf("List is Empty\n");
        return;
    }
    struct Node* temp = last->next;
    printf("List: ");
    do {
        printf("%d -> ", temp->data);
        temp = temp->next;
    } while (temp != last->next);
    printf("(back to start)\n");
}
int main() {
    insertEnd(10);
    insertEnd(20);
    insertBegin(5);
    display();
    deleteBegin();
    display();
    deleteEnd();
    display();
    return 0;
}
