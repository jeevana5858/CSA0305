#include <stdio.h>
#include <ctype.h>
#define MAX 100
char stack[MAX];
int top = -1;
void push(char c) {
    stack[++top] = c;
}
char pop() {
    return stack[top--];
}
int precedence(char c) {
    if (c == '^') return 3;
    if (c == '*' || c == '/') return 2;
    if (c == '+' || c == '-') return 1;
    return -1;
}
void infixToPostfix(char* exp) {
    char output[MAX];
    int i = 0, k = 0;
    char c;
    while ((c = exp[i++]) != '\0') {
        if (isalnum(c)) {  
            output[k++] = c;
        }
        else if (c == '(') {
            push(c);
        }
        else if (c == ')') {
            while (top != -1 && stack[top] != '(')
                output[k++] = pop();
            pop(); 
        }
        else { 
            while (top != -1 && precedence(stack[top]) >= precedence(c))
                output[k++] = pop();
            push(c);
        }
    }
    while (top != -1)
        output[k++] = pop();
    output[k] = '\0';
    printf("Postfix: %s\n", output);
}
int main() {
    char exp[MAX];
    printf("Enter Infix Expression: ");
    scanf("%s", exp);
    infixToPostfix(exp);
    return 0;
}
