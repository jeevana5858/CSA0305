#include <stdio.h>
#define SIZE 10
int hashTable[SIZE];
void init() {
    for (int i = 0; i < SIZE; i++)
        hashTable[i] = -1;   // -1 means empty
}
int hash(int key) {
    return key % SIZE;
}
void insert(int key) {
    int index = hash(key);
    int start = index;
    while (hashTable[index] != -1) {
        index = (index + 1) % SIZE;
        if (index == start) {
            printf("Hash table full! Cannot insert %d\n", key);
            return;
        }
    }
    hashTable[index] = key;
    printf("%d inserted at index %d\n", key, index);
}
void search(int key) {
    int index = hash(key);
    int start = index;
    while (hashTable[index] != -1) {
        if (hashTable[index] == key) {
            printf("%d found at index %d\n", key, index);
            return;
        }
        index = (index + 1) % SIZE;
        if (index == start) break;
    }
    printf("%d not found!\n", key);
}
void display() {
    printf("Hash Table: ");
    for (int i = 0; i < SIZE; i++) {
        if (hashTable[i] == -1)
            printf("_ ");
        else
            printf("%d ", hashTable[i]);
    }
    printf("\n");
}

int main() {
    init();
    insert(10);
    insert(20);
    insert(30);
    insert(25);
    insert(35);
    display();
    search(25);
    search(50);
    return 0;
}
